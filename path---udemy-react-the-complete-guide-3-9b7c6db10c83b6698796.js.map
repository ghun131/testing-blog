{"version":3,"sources":["webpack:///path---udemy-react-the-complete-guide-3-9b7c6db10c83b6698796.js","webpack:///./.cache/json/udemy-react-the-complete-guide-3.json"],"names":["webpackJsonp","379","module","exports","data","markdownRemark","html","frontmatter","date","path","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,uyCAAAC,aAA6zCC,KAAA,gBAAAC,KAAA,mCAAAC,MAAA,8CAAsHC","file":"path---udemy-react-the-complete-guide-3-9b7c6db10c83b6698796.js","sourcesContent":["webpackJsonp([128082138049932],{\n\n/***/ 379:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Continue with my marathon!</p>\\n<p>Some questions that come to mind during the video sessions:</p>\\n<ol>\\n<li>Okay so what is it with the <code>children</code> property, I don't think for now I can use it comfortably. I met this issue at the chapter Debugging React App video 74. Just note it down here in case I want to come back to it.</li>\\n<li>Breaking the UI into components is something I thought that can be easily understood but after the lesson of video 79, I believe that I have changed my mind. Each component should have a <strong>clear, specific and narrow</strong> responsiblity. The <strong>container component needs to be as lean as possible</strong> and it is a good practice to use <strong>as many functional component</strong> as I can.</li>\\n<li>React Life Circle is something that is tremendously tedious and it bores the hell out of me so just to remind myself about these important but dull technical knowledge, I am going to add a few key words because I know I will need to look back at them in the future:</li>\\n<li><code>shouldComponentUpdate</code> is fucking confusing but it is said that this method is very useful.</li>\\n<li>There are two life circles here updates from outside by <strong>Props changes</strong> and updates from inside because of <code>setState()</code></li>\\n</ol>\",\"frontmatter\":{\"date\":\"July 12, 2018\",\"path\":\"/udemy-react-the-complete-guide3\",\"title\":\"Udemy React the complete guide third day\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---udemy-react-the-complete-guide-3-9b7c6db10c83b6698796.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Continue with my marathon!</p>\\n<p>Some questions that come to mind during the video sessions:</p>\\n<ol>\\n<li>Okay so what is it with the <code>children</code> property, I don't think for now I can use it comfortably. I met this issue at the chapter Debugging React App video 74. Just note it down here in case I want to come back to it.</li>\\n<li>Breaking the UI into components is something I thought that can be easily understood but after the lesson of video 79, I believe that I have changed my mind. Each component should have a <strong>clear, specific and narrow</strong> responsiblity. The <strong>container component needs to be as lean as possible</strong> and it is a good practice to use <strong>as many functional component</strong> as I can.</li>\\n<li>React Life Circle is something that is tremendously tedious and it bores the hell out of me so just to remind myself about these important but dull technical knowledge, I am going to add a few key words because I know I will need to look back at them in the future:</li>\\n<li><code>shouldComponentUpdate</code> is fucking confusing but it is said that this method is very useful.</li>\\n<li>There are two life circles here updates from outside by <strong>Props changes</strong> and updates from inside because of <code>setState()</code></li>\\n</ol>\",\"frontmatter\":{\"date\":\"July 12, 2018\",\"path\":\"/udemy-react-the-complete-guide3\",\"title\":\"Udemy React the complete guide third day\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/udemy-react-the-complete-guide-3.json\n// module id = 379\n// module chunks = 128082138049932"],"sourceRoot":""}